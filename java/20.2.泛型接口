/*
 * 两个类实现一个泛型接口
 * A类实现的同时指定类型
 * B类实现的同时继续使用泛型
 * 这两个类在实例化的时候写法不一样
 */
public class TestDemo {
    public static void main(String[] args) {
        A a = new A();

        B<String> b1 = new B<>();
        B<Object> b2 = new B<>();

    }
}


interface Itest<T> {
    T test(T t);
}

class A implements Itest<String> {
    @Override
    public String test(String t) {
        return t;
    }  
}

class B<T> implements Itest<T> {
    @Override
    public T test(T t) {
        return t;
    }
}

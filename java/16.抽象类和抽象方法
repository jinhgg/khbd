抽象类存在的意义：
通过看类的抽象方法，就能知道子类一定具有这些方法，规范子类的方法实现

抽象类中不一定有抽象方法，有抽象方法的类一定是抽象类

抽象类可以有构造方法，但是不能创建对象

继承抽象类的子类有两种情况:
    1.是抽象类
    2.不是抽象类，必须重写所有抽象方法(idea alert+回车 implement method)

abstract class Person {
    private String name;
    private int age;
    public abstract void work();

    // 虽然抽象类不能创建对象，但构造方法也是有用的
    // 带参构造可以让子类super(name, age)调用
    public Person() {}
    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }
    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}

class Student extends Person {
    // 这三个方法都是快捷键生成
    public Student() {
    }

    public Student(String name, int age) {
        super(name, age);
    }

    @Override
    public void work() {
        System.out.println("work");
        
    }
    
}